Q1)What will be the output of the following Java code?

import java.util.*;
class VectorDemo
{
public static void main(String args[])
{
Vector obj = new Vector(4,2);
obj.addElement(new Integer(3));
obj.addElement(new Integer(2));
obj.addElement(new Integer(5));
System.out.println(obj.elementAt(1));
}
}

Q2) What will be the output of the following Java code?
import java.util.*;
class VectorDemo 
{
 public static void main(String args[]) 
 {
 Vector obj = new Vector(4,2);
 obj.addElement(new Integer(3));
 obj.addElement(new Integer(2));
 obj.addElement(new Integer(5));
 System.out.println(obj.capacity());
 }
 }

Q3) What will be the output of the following Java code?
import java.util.*;
class VectorDemo 
{
 public static void main(String args[]) {
 Vector obj = new Vector(4,2);
 obj.addElement(new Integer(3));
 obj.addElement(new Integer(2));
 obj.addElement(new Integer(6));
 obj.insertElementAt(new Integer(8), 2);
 System.out.println(obj);
 } 
}

Q4) What will be the output of the following Java code?
import java.util.*;
class VectorDemo 
{
 public static void main(String args[]) 
 {
 Vector obj = new Vector(4,2);
 obj.addElement(new Integer(3));
 obj.addElement(new Integer(2));
 obj.addElement(new Integer(5));
 obj.removeAll(obj);
 System.out.println(obj.isEmpty());
 }
 }

Q5) What will be the output of the following Java program?
import java.util.Vector;
public class Test 
{
    public static void main(String[] args) 
    {
        Vector<String> v1 = new Vector<>();
        Vector<String> v2 = new Vector<>();

        v1.add("Java");
        v1.add("Technology");

        v2.add("Java");
        v2.add("Technology");

        System.out.println(v1.equals(v2));
        System.out.println(v1.hashCode());
        System.out.println(v2.hashCode());
    }
}

Q6) What will be the output of the following Java program?
import java.util.ArrayList;
public class Test 
{
	public static void main(String args[]) 
	{
		ArrayList<String> obj1 = new ArrayList<String>();
		ArrayList<String> obj2 = new ArrayList<String>();
		obj1.add("A");
		obj1.add("B");
		obj2.add("A");
		obj2.add(1, "B");
		System.out.println(obj1.equals(obj2));
		System.out.println(obj1.hashCode());
		System.out.println(obj2.hashCode());
	}
}

Q7) What will be the output of the following Java program?
import java.util.ArrayList;
import java.util.List;
public class ArrayListTest 
{
public static void main(String[] args)
{
 List<String> list = new ArrayList<String>();
 list.add("Patna");
 list.add(0, "New York");
 list.add("Mumbai");
 list.add(2, "Sydney");
 System.out.println(list);
 }
}

Q8) What will be the output of the following Java program?
import java.util.List;
public class ArrayListTest 
{
public static void main(String[] args)
{
 List<String> list = new ArrayList<String>();
 list.add("Orange");
 list.add(0, "Banana");
 
 ArrayList<String> arList = new ArrayList<>();
 arList.add("Apple");
 list.add("Grapes");
 list.addAll(3, arList);
 System.out.println(list);
 }
}

Q9) What will be the output of the following Java program?
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<String>();
 list.add(null);
 list.add(0, "A");
 list.add(3, "B");
 list.add(1, "C");
 System.out.println(list);
 }
}

Q10) What will be the output of the following Java program?
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<String>();
 list.add(null);
 list.add(0, "A");
 list.add(2, "B");
 list.add(1, "C");
 System.out.println(list);
 }
}

Q11) What is the output of the following code.
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<String>();
 list.add(null);
 list.add(0, "A");
 list.add(null);
 list.add(2, "B");
 list.add("20");
 list.add(1, "C");
 System.out.println(list);
 }
}


Q12) What is the output of the following code.
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<String>();
 list.add(null);
 list.add(0, "A");
 list.add(null);
 list.add(2, "B");
 list.add("20");
 list.add(1, "C");
 System.out.println(list);
 }
}

Q13) What is the output of the following code.
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<>();
 list.add(12);
 list.add(16);
 list.add(34);
 list.add(78);
 list.remove(12);
 System.out.println(list);
 }
}

Q14) What is the output of the following code.
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<>();
 list.add('a');
 list.add('b');
 list.add('c');
 list.add('d');
 list.remove('c');
 System.out.println(list);
 }
}

Q15) What is the output of the following code.
import java.util.ArrayList;
public class ArrayListTest {
public static void main(String[] args)
{
 ArrayList<String> list = new ArrayList<>();
 list.add(12);
 list.add(16);
 list.add(34);
 list.add(78);
 list.remove(Integer.valueOf(16));
 System.out.println(list);
 }
}


Q16) What is the output of the following code.

package com.ravi.list_demo;
import java.util.*;
public class Test 
{
    public static void main(String[] args) 
    {
        List<String> list = new ArrayList<>();
        list.add("Java");
        list.add("Python");

        List<String> vector = new Vector<>();
        vector.add("Java");
        vector.add("Python");

        System.out.println(list.equals(vector));
    }
}

Q17) What is the output of the following code.

package com.ravi.list_demo;

import java.util.ArrayList;
import java.util.Vector;

class Person 
{
    String name;
    int age;

    Person(String name, int age) 
    {
        this.name = name;
        this.age = age;
    }

    public boolean equals(Object obj) 
    {
      if(obj instanceof Person p2)
      {           
        if(this.age == p2.age && this.name.equals(p2.name))
        {
    	  return true;
        }
        else
        {
    	  return false;
        }
      }
      else
      {
    	  System.err.println("Comparison is not possible");
    	  return false;
      }     
    }

    public int hashCode() 
    {
        return name.hashCode() + age;
    }
}

public class Test
{
    public static void main(String[] args) 
    {
        Vector<Person> v1 = new Vector<>();
        ArrayList<Person> a1 = new ArrayList<>();

        v1.add(new Person("Alice", 30));
        a1.add(new Person("Alice", 30));

        System.out.println(v1.equals(a1));
        System.out.println(v1.hashCode());
        System.out.println(a1.hashCode());
    }
}

Q18) What is the output of the following code :
package com.ravi.list_demo;

import java.util.ArrayList;
import java.util.Vector;

class Person 
{
    String name;
    int age;

    Person(String name, int age) 
    {
        this.name = name;
        this.age = age;
    }

 }

public class Test
{
    public static void main(String[] args) 
    {
        Vector<Person> v1 = new Vector<>();
        ArrayList<Person> a1 = new ArrayList<>();

        v1.add(new Person("Alice", 30));
        a1.add(new Person("Alice", 30));

        System.out.println(v1.equals(a1));
        System.out.println(v1.hashCode());
        System.out.println(a1.hashCode());
    }
}

Q19) Which scenario is not a good use case for Vector?
A) You need a resizable array in a multi-threaded context.
B) You need frequent random access to elements.
C) You are working in a single-threaded high-performance system.
D) You need synchronized access to list data.

Q20) Which of these supports fail-fast behavior when modified during iteration?
A) Vector
B) ArrayList
C) Both
D) Neither
