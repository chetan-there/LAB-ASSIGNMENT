ðŸ§  MultiThreading Questions with Answers
________________________________________
1. What is the output of the following code?
public class MultiThread implements Runnable
{
	public static void main(String[] args) throws InterruptedException {
		Thread thread = new Thread(new MultiThread());
		thread.start();
		System.out.print("nit ");
		thread.join();
		System.out.println("google ");
	}
	@Override
	public void run() {
		System.out.println("NareshIT");
	}
}
Output:
nit NareshIT
google 
Explanation:
â€¢	main thread prints nit .
â€¢	thread.start() runs run(), prints NareshIT.
â€¢	thread.join() waits for it to finish.
â€¢	Then prints google .
________________________________________
2. What is the output of the following code?
class Test extends Thread
{
	@Override
	public void run() {
		System.out.println("Run");
		super.run();
	}
	@Override
	public synchronized void start() {
		System.out.println("Start");
		super.start();
	}
}
public class MultiThread
{
	public static void main(String[] args) {
		nit();
	}
	static public void nit() {
		Test test = new Test();
		test.start();
	}
}
Output:
Start
Run
Exception in thread "main" java.lang.IllegalThreadStateException
Explanation:
â€¢	start() prints "Start", then calls super.start().
â€¢	run() prints "Run", but super.run() again causes problem inside the thread lifecycle â†’ exception occurs.
________________________________________
3. What is the output of the following code?
class Test extends Thread
{
	int a;
	public void run() {
		a++;
	}
}
public class MultiThread
{
	public static void main(String[] args) {
		Test test = new Test();
		test.run();
		System.out.println(test.a);
		test.start();
		System.out.println(test.a);
		System.out.println(test.isAlive());
		System.out.println(test.getName());
	}
}
Output:
1
1
true
Thread-0
Explanation:
â€¢	test.run() (no thread) increments a=1.
â€¢	test.start() starts thread again.
â€¢	isAlive() true during thread running.
â€¢	Default name Thread-0.
________________________________________
4. What is the output of the following code?
public class MultiThread extends Thread
{
	public void run() {
		System.out.println(Thread.currentThread().getId());
	}
	public static void main(String[] args) {
		MultiThread nit = new MultiThread();
		for(int i=0;i<10;i++)
		{
			nit.start();
		}
	}
}
Output:
Exception in thread "main" java.lang.IllegalThreadStateException
Explanation:
â€¢	Same thread nit started multiple times â†’ not allowed.
________________________________________
5. What is the output of the following code?
public class MultiThread extends Thread
{
	public void run() {
		System.out.print(Thread.currentThread().getId()+" ");
	}
	public static void main(String[] args) {
		for(int i=0;i<10;i++)
		{
			MultiThread nit = new MultiThread();
			nit.start();
		}
	}
}
Output:
(thread IDs, 10 different IDs printed)
Explanation:
â€¢	10 new threads started, different IDs printed.
________________________________________
6. What is the output of the following code?
public class MultiThread extends Thread
{
	public void run() {
		System.out.print(Thread.currentThread().getId()+" ");
	}
	@Override
	public void start() {
		System.out.print(Thread.currentThread().getName()+" ");
	}
	public static void main(String[] args) {
		MultiThread nit = new MultiThread();
		for(int i=0;i<10;i++)
		{
			nit.start();
		}
	}
}
Output:
main main main main main main main main main main 
Explanation:
â€¢	start() overridden â†’ prints name, doesn't start thread.
________________________________________
7. What is the output of the following code?
public class MultiThread extends Thread
{
	public void run() {
		System.out.print(Thread.currentThread().getId()+" ");
	}
	@Override
	public void start() {
		System.out.print(Thread.currentThread().getName()+" ");
	}
	public static void main(String[] args) {
		MultiThread nit = new MultiThread();
		for(int i=0;i<10;i++)
		{
			nit.run();
		}
	}
}
Output:
mainmainmainmainmainmainmainmainmainmain
Explanation:
â€¢	run() called manually â†’ no threading.
________________________________________
8. What is the output of the following code?
public class MultiThread implements Runnable
{
	Thread thread;
	public MultiThread() {
		thread = new Thread(this);
		thread.start();
	}
	public void run() {
		System.out.println(thread);
	}	
	public static void main(String[] args) {
		new MultiThread();
	}
}
Output:
Thread[Thread-0,5,main]
Explanation:
â€¢	New thread started, default name and priority printed.
________________________________________
