✅ Q1
✅ Code:
class Task extends Thread {
    public void run() {
        synchronized (this) {
            try {
                Thread.sleep(1000);
            } catch (InterruptedException e) {
                e.printStackTrace();
            }
            System.out.println("Task Completed by :" + Thread.currentThread().getName());
        }
    }
}

public class Exam {
    public static void main(String[] args) throws InterruptedException {
        Task task1 = new Task();
        Task task2 = new Task();
        task1.start();
        task2.start();
        task1.join();
        task2.join();
    }
}
✅ Explanation:
•	Two threads task1 and task2 are started.
•	Both have their own synchronized (this) blocks, so they don’t block each other.
•	sleep(1000) adds delay but doesn't release the lock.
•	After delay, each thread prints its own message.
•	join() ensures the main thread waits for both to finish.
✅ Output:
Task Completed by :Thread-0
Task Completed by :Thread-1
(Note: Output order may vary)
________________________________________
